{"ast":null,"code":"import _toConsumableArray from\"D:/New folder (4)/instagram-mern-main/backend/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"D:/New folder (4)/instagram-mern-main/backend/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{ALL_MESSAGES_ADD,ALL_MESSAGES_FAIL,ALL_MESSAGES_REQUEST,ALL_MESSAGES_SUCCESS,CLEAR_ERRORS,NEW_MESSAGE_FAIL,NEW_MESSAGE_REQUEST,NEW_MESSAGE_RESET,NEW_MESSAGE_SUCCESS}from\"../constants/messageConstants\";export var allMessagesReducer=function allMessagesReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{messages:[]};var _ref=arguments.length>1?arguments[1]:undefined,type=_ref.type,payload=_ref.payload;switch(type){case ALL_MESSAGES_REQUEST:return _objectSpread(_objectSpread({},state),{},{loading:true});case ALL_MESSAGES_SUCCESS:return{loading:false,messages:payload};case ALL_MESSAGES_FAIL:return _objectSpread(_objectSpread({},state),{},{loading:false,error:payload});case ALL_MESSAGES_ADD:return _objectSpread(_objectSpread({},state),{},{messages:[].concat(_toConsumableArray(state.messages),[payload])});case CLEAR_ERRORS:return _objectSpread(_objectSpread({},state),{},{error:null});default:return state;}};export var newMessageReducer=function newMessageReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var _ref2=arguments.length>1?arguments[1]:undefined,type=_ref2.type,payload=_ref2.payload;switch(type){case NEW_MESSAGE_REQUEST:return _objectSpread(_objectSpread({},state),{},{loading:true});case NEW_MESSAGE_SUCCESS:return{loading:false,success:payload.success,newMessage:payload.newMessage};case NEW_MESSAGE_RESET:return _objectSpread(_objectSpread({},state),{},{success:false,newMessage:{}});case NEW_MESSAGE_FAIL:return _objectSpread(_objectSpread({},state),{},{loading:false,error:payload});case CLEAR_ERRORS:return _objectSpread(_objectSpread({},state),{},{error:null});default:return state;}};","map":{"version":3,"sources":["D:/New folder (4)/instagram-mern-main/backend/frontend/src/reducers/messageReducer.js"],"names":["ALL_MESSAGES_ADD","ALL_MESSAGES_FAIL","ALL_MESSAGES_REQUEST","ALL_MESSAGES_SUCCESS","CLEAR_ERRORS","NEW_MESSAGE_FAIL","NEW_MESSAGE_REQUEST","NEW_MESSAGE_RESET","NEW_MESSAGE_SUCCESS","allMessagesReducer","state","messages","type","payload","loading","error","newMessageReducer","success","newMessage"],"mappings":"+RAAA,OAASA,gBAAT,CAA2BC,iBAA3B,CAA8CC,oBAA9C,CAAoEC,oBAApE,CAA0FC,YAA1F,CAAwGC,gBAAxG,CAA0HC,mBAA1H,CAA+IC,iBAA/I,CAAkKC,mBAAlK,KAA6L,+BAA7L,CAEA,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAiD,IAAhDC,CAAAA,KAAgD,2DAAxC,CAAEC,QAAQ,CAAE,EAAZ,CAAwC,oDAApBC,IAAoB,MAApBA,IAAoB,CAAdC,OAAc,MAAdA,OAAc,CAC/E,OAAQD,IAAR,EACI,IAAKV,CAAAA,oBAAL,CACI,sCACOQ,KADP,MAEII,OAAO,CAAE,IAFb,GAIJ,IAAKX,CAAAA,oBAAL,CACI,MAAO,CACHW,OAAO,CAAE,KADN,CAEHH,QAAQ,CAAEE,OAFP,CAAP,CAIJ,IAAKZ,CAAAA,iBAAL,CACI,sCACOS,KADP,MAEII,OAAO,CAAE,KAFb,CAGIC,KAAK,CAAEF,OAHX,GAKJ,IAAKb,CAAAA,gBAAL,CACI,sCACOU,KADP,MAEIC,QAAQ,8BAAMD,KAAK,CAACC,QAAZ,GAAsBE,OAAtB,EAFZ,GAIJ,IAAKT,CAAAA,YAAL,CACI,sCACOM,KADP,MAEIK,KAAK,CAAE,IAFX,GAIJ,QACI,MAAOL,CAAAA,KAAP,CA5BR,CA8BH,CA/BM,CAiCP,MAAO,IAAMM,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAmC,IAAlCN,CAAAA,KAAkC,2DAA1B,EAA0B,qDAApBE,IAAoB,OAApBA,IAAoB,CAAdC,OAAc,OAAdA,OAAc,CAChE,OAAQD,IAAR,EACI,IAAKN,CAAAA,mBAAL,CACI,sCACOI,KADP,MAEII,OAAO,CAAE,IAFb,GAIJ,IAAKN,CAAAA,mBAAL,CACI,MAAO,CACHM,OAAO,CAAE,KADN,CAEHG,OAAO,CAAEJ,OAAO,CAACI,OAFd,CAGHC,UAAU,CAAEL,OAAO,CAACK,UAHjB,CAAP,CAKJ,IAAKX,CAAAA,iBAAL,CACI,sCACOG,KADP,MAEIO,OAAO,CAAE,KAFb,CAGIC,UAAU,CAAE,EAHhB,GAKJ,IAAKb,CAAAA,gBAAL,CACI,sCACOK,KADP,MAEII,OAAO,CAAE,KAFb,CAGIC,KAAK,CAAEF,OAHX,GAKJ,IAAKT,CAAAA,YAAL,CACI,sCACOM,KADP,MAEIK,KAAK,CAAE,IAFX,GAIJ,QACI,MAAOL,CAAAA,KAAP,CA9BR,CAgCH,CAjCM","sourcesContent":["import { ALL_MESSAGES_ADD, ALL_MESSAGES_FAIL, ALL_MESSAGES_REQUEST, ALL_MESSAGES_SUCCESS, CLEAR_ERRORS, NEW_MESSAGE_FAIL, NEW_MESSAGE_REQUEST, NEW_MESSAGE_RESET, NEW_MESSAGE_SUCCESS } from \"../constants/messageConstants\";\n\nexport const allMessagesReducer = (state = { messages: [] }, { type, payload }) => {\n    switch (type) {\n        case ALL_MESSAGES_REQUEST:\n            return {\n                ...state,\n                loading: true,\n            };\n        case ALL_MESSAGES_SUCCESS:\n            return {\n                loading: false,\n                messages: payload,\n            };\n        case ALL_MESSAGES_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: payload,\n            };\n        case ALL_MESSAGES_ADD:\n            return {\n                ...state,\n                messages: [...state.messages, payload]\n            };\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null,\n            };\n        default:\n            return state;\n    }\n}\n\nexport const newMessageReducer = (state = {}, { type, payload }) => {\n    switch (type) {\n        case NEW_MESSAGE_REQUEST:\n            return {\n                ...state,\n                loading: true,\n            };\n        case NEW_MESSAGE_SUCCESS:\n            return {\n                loading: false,\n                success: payload.success,\n                newMessage: payload.newMessage,\n            };\n        case NEW_MESSAGE_RESET:\n            return {\n                ...state,\n                success: false,\n                newMessage: {}\n            };\n        case NEW_MESSAGE_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: payload,\n            };\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null,\n            };\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}