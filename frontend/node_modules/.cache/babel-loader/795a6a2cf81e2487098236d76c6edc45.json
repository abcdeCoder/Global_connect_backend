{"ast":null,"code":"import { ALL_USERS_FAIL, ALL_USERS_REQUEST, ALL_USERS_SUCCESS, CLEAR_ERRORS, FOLLOW_USER_FAIL, FOLLOW_USER_REQUEST, FOLLOW_USER_SUCCESS, FORGOT_PASSWORD_FAIL, FORGOT_PASSWORD_REQUEST, FORGOT_PASSWORD_SUCCESS, LOAD_USER_FAIL, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOGIN_USER_FAIL, LOGIN_USER_REQUEST, LOGIN_USER_SUCCESS, LOGOUT_USER_FAIL, LOGOUT_USER_SUCCESS, REGISTER_USER_FAIL, REGISTER_USER_REQUEST, REGISTER_USER_SUCCESS, RESET_PASSWORD_FAIL, RESET_PASSWORD_REQUEST, RESET_PASSWORD_SUCCESS, UPDATE_PASSWORD_FAIL, UPDATE_PASSWORD_REQUEST, UPDATE_PASSWORD_SUCCESS, UPDATE_PROFILE_FAIL, UPDATE_PROFILE_REQUEST, UPDATE_PROFILE_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS } from \"../constants/userConstants\";\nimport axios from 'axios'; // Login User\n\nexport const loginUser = (userId, password) => async dispatch => {\n  try {\n    dispatch({\n      type: LOGIN_USER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/v1/login', {\n      userId,\n      password\n    }, config);\n    dispatch({\n      type: LOGIN_USER_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: LOGIN_USER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Register User\n\nexport const registerUser = userData => async dispatch => {\n  try {\n    dispatch({\n      type: REGISTER_USER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/v1/signup', userData, config);\n    dispatch({\n      type: REGISTER_USER_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: REGISTER_USER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Load User\n\nexport const loadUser = () => async dispatch => {\n  try {\n    dispatch({\n      type: LOAD_USER_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/v1/me');\n    dispatch({\n      type: LOAD_USER_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: LOAD_USER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Logout User\n\nexport const logoutUser = () => async dispatch => {\n  try {\n    await axios.get('/api/v1/logout');\n    dispatch({\n      type: LOGOUT_USER_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: LOGOUT_USER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Get User Details\n\nexport const getUserDetails = username => async dispatch => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/user/${username}`);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Get User Details By ID\n\nexport const getUserDetailsById = userId => async dispatch => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/userdetails/${userId}`);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Get Suggested Users\n\nexport const getSuggestedUsers = () => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_USERS_REQUEST\n    });\n    setTimeout(async () => {\n      const {\n        data\n      } = await axios.get('/api/v1/users/suggested');\n      dispatch({\n        type: ALL_USERS_SUCCESS,\n        payload: data.users\n      });\n    }, 600);\n  } catch (error) {\n    dispatch({\n      type: ALL_USERS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Follow | Unfollow User\n\nexport const followUser = userId => async dispatch => {\n  try {\n    dispatch({\n      type: FOLLOW_USER_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/follow/${userId}`);\n    dispatch({\n      type: FOLLOW_USER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: FOLLOW_USER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Forgot Password\n\nexport const forgotPassword = email => async dispatch => {\n  try {\n    dispatch({\n      type: FORGOT_PASSWORD_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/v1/password/forgot', {\n      email\n    }, config);\n    dispatch({\n      type: FORGOT_PASSWORD_SUCCESS,\n      payload: data.message\n    });\n  } catch (error) {\n    dispatch({\n      type: FORGOT_PASSWORD_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Reset Password\n\nexport const resetPassword = (token, password) => async dispatch => {\n  try {\n    dispatch({\n      type: RESET_PASSWORD_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/v1/password/reset/${token}`, {\n      password\n    }, config);\n    dispatch({\n      type: RESET_PASSWORD_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: RESET_PASSWORD_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Update User Profile\n\nexport const updateProfile = userData => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_PROFILE_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    };\n    const {\n      data\n    } = await axios.put('/api/v1/update/profile', userData, config);\n    dispatch({\n      type: UPDATE_PROFILE_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PROFILE_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Update User Password\n\nexport const updatePassword = passwords => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_PASSWORD_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.put('/api/v1/update/password', passwords, config);\n    dispatch({\n      type: UPDATE_PASSWORD_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PASSWORD_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Clear All Errors\n\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"sources":["D:/New folder (4)/instagram-mern-main/frontend/src/actions/userAction.js"],"names":["ALL_USERS_FAIL","ALL_USERS_REQUEST","ALL_USERS_SUCCESS","CLEAR_ERRORS","FOLLOW_USER_FAIL","FOLLOW_USER_REQUEST","FOLLOW_USER_SUCCESS","FORGOT_PASSWORD_FAIL","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","LOAD_USER_FAIL","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOGIN_USER_FAIL","LOGIN_USER_REQUEST","LOGIN_USER_SUCCESS","LOGOUT_USER_FAIL","LOGOUT_USER_SUCCESS","REGISTER_USER_FAIL","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","RESET_PASSWORD_FAIL","RESET_PASSWORD_REQUEST","RESET_PASSWORD_SUCCESS","UPDATE_PASSWORD_FAIL","UPDATE_PASSWORD_REQUEST","UPDATE_PASSWORD_SUCCESS","UPDATE_PROFILE_FAIL","UPDATE_PROFILE_REQUEST","UPDATE_PROFILE_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","axios","loginUser","userId","password","dispatch","type","config","headers","data","post","payload","user","error","response","message","registerUser","userData","loadUser","get","logoutUser","getUserDetails","username","getUserDetailsById","getSuggestedUsers","setTimeout","users","followUser","forgotPassword","email","resetPassword","token","put","success","updateProfile","updatePassword","passwords","clearErrors"],"mappings":"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","sourcesContent":["import { ALL_USERS_FAIL, ALL_USERS_REQUEST, ALL_USERS_SUCCESS, CLEAR_ERRORS, FOLLOW_USER_FAIL, FOLLOW_USER_REQUEST, FOLLOW_USER_SUCCESS, FORGOT_PASSWORD_FAIL, FORGOT_PASSWORD_REQUEST, FORGOT_PASSWORD_SUCCESS, LOAD_USER_FAIL, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOGIN_USER_FAIL, LOGIN_USER_REQUEST, LOGIN_USER_SUCCESS, LOGOUT_USER_FAIL, LOGOUT_USER_SUCCESS, REGISTER_USER_FAIL, REGISTER_USER_REQUEST, REGISTER_USER_SUCCESS, RESET_PASSWORD_FAIL, RESET_PASSWORD_REQUEST, RESET_PASSWORD_SUCCESS, UPDATE_PASSWORD_FAIL, UPDATE_PASSWORD_REQUEST, UPDATE_PASSWORD_SUCCESS, UPDATE_PROFILE_FAIL, UPDATE_PROFILE_REQUEST, UPDATE_PROFILE_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS } from \"../constants/userConstants\";\nimport axios from 'axios';\n\n// Login User\nexport const loginUser = (userId, password) => async (dispatch) => {\n    try {\n        dispatch({ type: LOGIN_USER_REQUEST });\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        }\n\n        const { data } = await axios.post(\n            '/api/v1/login',\n            { userId, password },\n            config\n        );\n\n        dispatch({\n            type: LOGIN_USER_SUCCESS,\n            payload: data.user,\n        });\n    } catch (error) {\n        dispatch({\n            type: LOGIN_USER_FAIL,\n            payload: error.response.data.message,\n        });\n    }\n}\n\n// Register User\nexport const registerUser = (userData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: REGISTER_USER_REQUEST });\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\",\n            },\n        }\n\n        const { data } = await axios.post(\n            '/api/v1/signup',\n            userData,\n            config\n        );\n\n        dispatch({\n            type: REGISTER_USER_SUCCESS,\n            payload: data.user,\n        });\n\n    } catch (error) {\n        dispatch({\n            type: REGISTER_USER_FAIL,\n            payload: error.response.data.message,\n        });\n    }\n};\n\n// Load User\nexport const loadUser = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: LOAD_USER_REQUEST });\n\n        const { data } = await axios.get('/api/v1/me');\n\n        dispatch({\n            type: LOAD_USER_SUCCESS,\n            payload: data.user,\n        });\n\n    } catch (error) {\n        dispatch({\n            type: LOAD_USER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Logout User\nexport const logoutUser = () => async (dispatch) => {\n    try {\n        await axios.get('/api/v1/logout');\n        dispatch({ type: LOGOUT_USER_SUCCESS });\n    } catch (error) {\n        dispatch({\n            type: LOGOUT_USER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Get User Details\nexport const getUserDetails = (username) => async (dispatch) => {\n    try {\n\n        dispatch({ type: USER_DETAILS_REQUEST });\n        const { data } = await axios.get(`/api/v1/user/${username}`);\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data.user,\n        });\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response.data.message,\n        });\n    }\n};\n\n// Get User Details By ID\nexport const getUserDetailsById = (userId) => async (dispatch) => {\n    try {\n\n        dispatch({ type: USER_DETAILS_REQUEST });\n        const { data } = await axios.get(`/api/v1/userdetails/${userId}`);\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data.user,\n        });\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response.data.message,\n        });\n    }\n};\n\n// Get Suggested Users\nexport const getSuggestedUsers = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: ALL_USERS_REQUEST });\n\n        setTimeout(async () => {\n            const { data } = await axios.get('/api/v1/users/suggested');\n\n            dispatch({\n                type: ALL_USERS_SUCCESS,\n                payload: data.users,\n            });\n        }, 600);\n\n    } catch (error) {\n        dispatch({\n            type: ALL_USERS_FAIL,\n            payload: error.response.data.message,\n        });\n    }\n};\n\n// Follow | Unfollow User\nexport const followUser = (userId) => async (dispatch) => {\n    try {\n\n        dispatch({ type: FOLLOW_USER_REQUEST });\n        const { data } = await axios.get(`/api/v1/follow/${userId}`);\n\n        dispatch({\n            type: FOLLOW_USER_SUCCESS,\n            payload: data,\n        });\n\n    } catch (error) {\n        dispatch({\n            type: FOLLOW_USER_FAIL,\n            payload: error.response.data.message,\n        });\n    }\n};\n\n// Forgot Password\nexport const forgotPassword = (email) => async (dispatch) => {\n    try {\n\n        dispatch({ type: FORGOT_PASSWORD_REQUEST });\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        }\n\n        const { data } = await axios.post(\n            '/api/v1/password/forgot',\n            { email },\n            config\n        );\n\n        dispatch({\n            type: FORGOT_PASSWORD_SUCCESS,\n            payload: data.message,\n        });\n\n    } catch (error) {\n        dispatch({\n            type: FORGOT_PASSWORD_FAIL,\n            payload: error.response.data.message,\n        });\n    }\n};\n\n// Reset Password\nexport const resetPassword = (token, password) => async (dispatch) => {\n    try {\n\n        dispatch({ type: RESET_PASSWORD_REQUEST });\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        }\n\n        const { data } = await axios.put(\n            `/api/v1/password/reset/${token}`,\n            { password },\n            config\n        );\n\n        dispatch({\n            type: RESET_PASSWORD_SUCCESS,\n            payload: data.success,\n        });\n\n    } catch (error) {\n        dispatch({\n            type: RESET_PASSWORD_FAIL,\n            payload: error.response.data.message,\n        });\n    }\n};\n\n// Update User Profile\nexport const updateProfile = (userData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_PROFILE_REQUEST });\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\",\n            },\n        }\n\n        const { data } = await axios.put(\n            '/api/v1/update/profile',\n            userData,\n            config\n        );\n\n        dispatch({\n            type: UPDATE_PROFILE_SUCCESS,\n            payload: data.success,\n        });\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PROFILE_FAIL,\n            payload: error.response.data.message,\n        });\n    }\n};\n\n// Update User Password\nexport const updatePassword = (passwords) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_PASSWORD_REQUEST });\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        }\n        const { data } = await axios.put(\n            '/api/v1/update/password',\n            passwords,\n            config\n        );\n\n        dispatch({\n            type: UPDATE_PASSWORD_SUCCESS,\n            payload: data.success,\n        });\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PASSWORD_FAIL,\n            payload: error.response.data.message,\n        });\n    }\n};\n\n// Clear All Errors\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({ type: CLEAR_ERRORS });\n};"]},"metadata":{},"sourceType":"module"}