{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { allUsersReducer, followUserReducer, forgotPasswordReducer, profileReducer, userDetailsReducer, userReducer } from './reducers/userReducer';\nimport { deletePostReducer, likePostReducer, newCommentReducer, newPostReducer, postDetailsReducer, postOfFollowingReducer, savePostReducer } from './reducers/postReducer';\nimport { allChatsReducer, newChatReducer } from './reducers/chatsReducer';\nimport { allMessagesReducer, newMessageReducer } from './reducers/messageReducer';\nconst reducer = combineReducers({\n  user: userReducer,\n  forgotPassword: forgotPasswordReducer,\n  newPost: newPostReducer,\n  userDetails: userDetailsReducer,\n  allUsers: allUsersReducer,\n  postOfFollowing: postOfFollowingReducer,\n  likePost: likePostReducer,\n  followUser: followUserReducer,\n  newComment: newCommentReducer,\n  savePost: savePostReducer,\n  deletePost: deletePostReducer,\n  profile: profileReducer,\n  postDetails: postDetailsReducer,\n  allChats: allChatsReducer,\n  allMessages: allMessagesReducer,\n  newMessage: newMessageReducer,\n  newChat: newChatReducer\n});\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["D:/New folder (4)/instagram-mern-main/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","allUsersReducer","followUserReducer","forgotPasswordReducer","profileReducer","userDetailsReducer","userReducer","deletePostReducer","likePostReducer","newCommentReducer","newPostReducer","postDetailsReducer","postOfFollowingReducer","savePostReducer","allChatsReducer","newChatReducer","allMessagesReducer","newMessageReducer","reducer","user","forgotPassword","newPost","userDetails","allUsers","postOfFollowing","likePost","followUser","newComment","savePost","deletePost","profile","postDetails","allChats","allMessages","newMessage","newChat","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,eAAT,EAA0BC,iBAA1B,EAA6CC,qBAA7C,EAAoEC,cAApE,EAAoFC,kBAApF,EAAwGC,WAAxG,QAA2H,wBAA3H;AACA,SAASC,iBAAT,EAA4BC,eAA5B,EAA6CC,iBAA7C,EAAgEC,cAAhE,EAAgFC,kBAAhF,EAAoGC,sBAApG,EAA4HC,eAA5H,QAAmJ,wBAAnJ;AACA,SAASC,eAAT,EAA0BC,cAA1B,QAAgD,yBAAhD;AACA,SAASC,kBAAT,EAA6BC,iBAA7B,QAAsD,2BAAtD;AAEA,MAAMC,OAAO,GAAGrB,eAAe,CAAC;AAC5BsB,EAAAA,IAAI,EAAEb,WADsB;AAE5Bc,EAAAA,cAAc,EAAEjB,qBAFY;AAG5BkB,EAAAA,OAAO,EAAEX,cAHmB;AAI5BY,EAAAA,WAAW,EAAEjB,kBAJe;AAK5BkB,EAAAA,QAAQ,EAAEtB,eALkB;AAM5BuB,EAAAA,eAAe,EAAEZ,sBANW;AAO5Ba,EAAAA,QAAQ,EAAEjB,eAPkB;AAQ5BkB,EAAAA,UAAU,EAAExB,iBARgB;AAS5ByB,EAAAA,UAAU,EAAElB,iBATgB;AAU5BmB,EAAAA,QAAQ,EAAEf,eAVkB;AAW5BgB,EAAAA,UAAU,EAAEtB,iBAXgB;AAY5BuB,EAAAA,OAAO,EAAE1B,cAZmB;AAa5B2B,EAAAA,WAAW,EAAEpB,kBAbe;AAc5BqB,EAAAA,QAAQ,EAAElB,eAdkB;AAe5BmB,EAAAA,WAAW,EAAEjB,kBAfe;AAgB5BkB,EAAAA,UAAU,EAAEjB,iBAhBgB;AAiB5BkB,EAAAA,OAAO,EAAEpB;AAjBmB,CAAD,CAA/B;AAoBA,MAAMqB,KAAK,GAAGxC,WAAW,CACrBsB,OADqB,EAErBlB,mBAAmB,CAACF,eAAe,CAACC,KAAD,CAAhB,CAFE,CAAzB;AAKA,eAAeqC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { allUsersReducer, followUserReducer, forgotPasswordReducer, profileReducer, userDetailsReducer, userReducer } from './reducers/userReducer';\nimport { deletePostReducer, likePostReducer, newCommentReducer, newPostReducer, postDetailsReducer, postOfFollowingReducer, savePostReducer } from './reducers/postReducer';\nimport { allChatsReducer, newChatReducer } from './reducers/chatsReducer';\nimport { allMessagesReducer, newMessageReducer } from './reducers/messageReducer';\n\nconst reducer = combineReducers({\n    user: userReducer,\n    forgotPassword: forgotPasswordReducer,\n    newPost: newPostReducer,\n    userDetails: userDetailsReducer,\n    allUsers: allUsersReducer,\n    postOfFollowing: postOfFollowingReducer,\n    likePost: likePostReducer,\n    followUser: followUserReducer,\n    newComment: newCommentReducer,\n    savePost: savePostReducer,\n    deletePost: deletePostReducer,\n    profile: profileReducer,\n    postDetails: postDetailsReducer,\n    allChats: allChatsReducer,\n    allMessages: allMessagesReducer,\n    newMessage: newMessageReducer,\n    newChat: newChatReducer,\n});\n\nconst store = createStore(\n    reducer,\n    composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default store;"]},"metadata":{},"sourceType":"module"}