{"ast":null,"code":"import _asyncToGenerator from\"D:/New folder (4)/instagram-mern-main/backend/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"D:\\\\New folder (4)\\\\instagram-mern-main\\\\backend\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import axios from\"axios\";import{ALL_CHATS_FAIL,ALL_CHATS_REQUEST,ALL_CHATS_SUCCESS,CLEAR_ERRORS,NEW_CHAT_FAIL,NEW_CHAT_REQUEST,NEW_CHAT_SUCCESS}from\"../constants/chatConstants\";// Get All Chats\nexport var getAllChats=function getAllChats(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var _yield$axios$get,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;dispatch({type:ALL_CHATS_REQUEST});_context.next=4;return axios.get('/api/v1/chats');case 4:_yield$axios$get=_context.sent;data=_yield$axios$get.data;dispatch({type:ALL_CHATS_SUCCESS,payload:data.chats});_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);dispatch({type:ALL_CHATS_FAIL,payload:_context.t0.response.data.message});case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return function(_x){return _ref.apply(this,arguments);};}();};// New Chat\nexport var addNewChat=function addNewChat(userId){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var config,_yield$axios$post,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;dispatch({type:NEW_CHAT_REQUEST});config={header:{\"Content-Type\":\"application/json\"}};_context2.next=5;return axios.post(\"/api/v1/newChat\",{receiverId:userId},config);case 5:_yield$axios$post=_context2.sent;data=_yield$axios$post.data;dispatch({type:NEW_CHAT_SUCCESS,payload:data});_context2.next=13;break;case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](0);dispatch({type:NEW_CHAT_FAIL,payload:_context2.t0.response.data.message});case 13:case\"end\":return _context2.stop();}}},_callee2,null,[[0,10]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};// Clear All Errors\nexport var clearErrors=function clearErrors(){return function(dispatch){dispatch({type:CLEAR_ERRORS});};};","map":{"version":3,"sources":["D:/New folder (4)/instagram-mern-main/backend/frontend/src/actions/chatAction.js"],"names":["axios","ALL_CHATS_FAIL","ALL_CHATS_REQUEST","ALL_CHATS_SUCCESS","CLEAR_ERRORS","NEW_CHAT_FAIL","NEW_CHAT_REQUEST","NEW_CHAT_SUCCESS","getAllChats","dispatch","type","get","data","payload","chats","response","message","addNewChat","userId","config","header","post","receiverId","clearErrors"],"mappings":"oSAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,cAAT,CAAyBC,iBAAzB,CAA4CC,iBAA5C,CAA+DC,YAA/D,CAA6EC,aAA7E,CAA4FC,gBAA5F,CAA8GC,gBAA9G,KAAsI,4BAAtI,CAEA;AACA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,kGAAM,iBAAOC,QAAP,4JAGzBA,QAAQ,CAAC,CAAEC,IAAI,CAAER,iBAAR,CAAD,CAAR,CAHyB,sBAKFF,CAAAA,KAAK,CAACW,GAAN,CAAU,eAAV,CALE,uCAKjBC,IALiB,kBAKjBA,IALiB,CAOzBH,QAAQ,CAAC,CACLC,IAAI,CAAEP,iBADD,CAELU,OAAO,CAAED,IAAI,CAACE,KAFT,CAAD,CAAR,CAPyB,+EAazBL,QAAQ,CAAC,CACLC,IAAI,CAAET,cADD,CAELY,OAAO,CAAE,YAAME,QAAN,CAAeH,IAAf,CAAoBI,OAFxB,CAAD,CAAR,CAbyB,oEAAN,gEAApB,CAoBP;AACA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,MAAD,kGAAY,kBAAOT,QAAP,yKAG9BA,QAAQ,CAAC,CAAEC,IAAI,CAAEJ,gBAAR,CAAD,CAAR,CACMa,MAJwB,CAIf,CAAEC,MAAM,CAAE,CAAE,eAAgB,kBAAlB,CAAV,CAJe,wBAKPpB,CAAAA,KAAK,CAACqB,IAAN,CAAW,iBAAX,CAA8B,CAAEC,UAAU,CAAEJ,MAAd,CAA9B,CAAsDC,MAAtD,CALO,yCAKtBP,IALsB,mBAKtBA,IALsB,CAO9BH,QAAQ,CAAC,CACLC,IAAI,CAAEH,gBADD,CAELM,OAAO,CAAED,IAFJ,CAAD,CAAR,CAP8B,qFAa9BH,QAAQ,CAAC,CACLC,IAAI,CAAEL,aADD,CAELQ,OAAO,CAAE,aAAME,QAAN,CAAeH,IAAf,CAAoBI,OAFxB,CAAD,CAAR,CAb8B,uEAAZ,kEAAnB,CAoBP;AACA,MAAO,IAAMO,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SAAM,UAACd,QAAD,CAAc,CAC3CA,QAAQ,CAAC,CAAEC,IAAI,CAAEN,YAAR,CAAD,CAAR,CACH,CAF0B,EAApB","sourcesContent":["import axios from \"axios\";\nimport { ALL_CHATS_FAIL, ALL_CHATS_REQUEST, ALL_CHATS_SUCCESS, CLEAR_ERRORS, NEW_CHAT_FAIL, NEW_CHAT_REQUEST, NEW_CHAT_SUCCESS } from \"../constants/chatConstants\";\n\n// Get All Chats\nexport const getAllChats = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: ALL_CHATS_REQUEST });\n\n        const { data } = await axios.get('/api/v1/chats');\n\n        dispatch({\n            type: ALL_CHATS_SUCCESS,\n            payload: data.chats,\n        });\n\n    } catch (error) {\n        dispatch({\n            type: ALL_CHATS_FAIL,\n            payload: error.response.data.message,\n        });\n    }\n};\n\n// New Chat\nexport const addNewChat = (userId) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_CHAT_REQUEST });\n        const config = { header: { \"Content-Type\": \"application/json\" } }\n        const { data } = await axios.post(\"/api/v1/newChat\", { receiverId: userId }, config);\n\n        dispatch({\n            type: NEW_CHAT_SUCCESS,\n            payload: data,\n        });\n\n    } catch (error) {\n        dispatch({\n            type: NEW_CHAT_FAIL,\n            payload: error.response.data.message,\n        });\n    }\n}\n\n// Clear All Errors\nexport const clearErrors = () => (dispatch) => {\n    dispatch({ type: CLEAR_ERRORS });\n}"]},"metadata":{},"sourceType":"module"}