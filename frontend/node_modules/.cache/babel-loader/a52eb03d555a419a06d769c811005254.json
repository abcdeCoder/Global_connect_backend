{"ast":null,"code":"import _objectSpread from\"D:/New folder (4)/instagram-mern-main/backend/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"D:/New folder (4)/instagram-mern-main/backend/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from'react';import{useDispatch,useSelector}from'react-redux';import{toast}from'react-toastify';import{clearErrors,getPostsOfFollowing}from'../../actions/postAction';import{LIKE_UNLIKE_POST_RESET,NEW_COMMENT_RESET,POST_FOLLOWING_RESET,SAVE_UNSAVE_POST_RESET}from'../../constants/postConstants';import UsersDialog from'../Layouts/UsersDialog';import PostItem from'./PostItem';import StoriesContainer from'./StoriesContainer';import InfiniteScroll from'react-infinite-scroll-component';import SpinLoader from'../Layouts/SpinLoader';import SkeletonPost from'../Layouts/SkeletonPost';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var PostsContainer=function PostsContainer(){var dispatch=useDispatch();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),usersList=_useState2[0],setUsersList=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),usersDialog=_useState4[0],setUsersDialog=_useState4[1];var _useState5=useState(2),_useState6=_slicedToArray(_useState5,2),page=_useState6[0],setPage=_useState6[1];var _useSelector=useSelector(function(state){return state.postOfFollowing;}),loading=_useSelector.loading,error=_useSelector.error,posts=_useSelector.posts,totalPosts=_useSelector.totalPosts;var _useSelector2=useSelector(function(state){return state.likePost;}),likeError=_useSelector2.error,message=_useSelector2.message,success=_useSelector2.success;var _useSelector3=useSelector(function(state){return state.newComment;}),commentError=_useSelector3.error,commentSuccess=_useSelector3.success;var _useSelector4=useSelector(function(state){return state.savePost;}),saveError=_useSelector4.error,saveSuccess=_useSelector4.success,saveMessage=_useSelector4.message;var handleClose=function handleClose(){return setUsersDialog(false);};useEffect(function(){if(error){toast.error(error);dispatch(clearErrors());}dispatch(getPostsOfFollowing());dispatch({type:POST_FOLLOWING_RESET});},[dispatch,error]);useEffect(function(){if(likeError){toast.error(likeError);dispatch(clearErrors());}if(success){toast.success(message);dispatch({type:LIKE_UNLIKE_POST_RESET});}if(commentError){toast.error(commentError);dispatch(clearErrors());}if(commentSuccess){toast.success(\"Comment Added\");dispatch({type:NEW_COMMENT_RESET});}if(saveError){toast.error(saveError);dispatch(clearErrors());}if(saveSuccess){toast.success(saveMessage);dispatch({type:SAVE_UNSAVE_POST_RESET});}},[dispatch,success,likeError,message,commentError,commentSuccess,saveError,saveSuccess,saveMessage]);var fetchMorePosts=function fetchMorePosts(){setPage(function(prev){return prev+1;});dispatch(getPostsOfFollowing(page));};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col w-full lg:w-2/3 sm:mt-6 sm:px-8 mb-8\",children:[/*#__PURE__*/_jsx(StoriesContainer,{}),loading&&Array(5).fill(\"\").map(function(el,i){return/*#__PURE__*/_jsx(SkeletonPost,{},i);}),/*#__PURE__*/_jsx(InfiniteScroll,{dataLength:posts.length,next:fetchMorePosts,hasMore:posts.length!==totalPosts,loader:/*#__PURE__*/_jsx(SpinLoader,{}),children:/*#__PURE__*/_jsx(\"div\",{className:\"w-full h-full mt-1 sm:mt-6 flex flex-col space-y-4\",children:posts===null||posts===void 0?void 0:posts.map(function(post){return/*#__PURE__*/_jsx(PostItem,_objectSpread(_objectSpread({},post),{},{setUsersDialog:setUsersDialog,setUsersList:setUsersList}),post._id);})})}),/*#__PURE__*/_jsx(UsersDialog,{title:\"Likes\",open:usersDialog,onClose:handleClose,usersList:usersList})]})});};export default PostsContainer;","map":{"version":3,"sources":["D:/New folder (4)/instagram-mern-main/backend/frontend/src/components/Home/PostsContainer.jsx"],"names":["useEffect","useState","useDispatch","useSelector","toast","clearErrors","getPostsOfFollowing","LIKE_UNLIKE_POST_RESET","NEW_COMMENT_RESET","POST_FOLLOWING_RESET","SAVE_UNSAVE_POST_RESET","UsersDialog","PostItem","StoriesContainer","InfiniteScroll","SpinLoader","SkeletonPost","PostsContainer","dispatch","usersList","setUsersList","usersDialog","setUsersDialog","page","setPage","state","postOfFollowing","loading","error","posts","totalPosts","likePost","likeError","message","success","newComment","commentError","commentSuccess","savePost","saveError","saveSuccess","saveMessage","handleClose","type","fetchMorePosts","prev","Array","fill","map","el","i","length","post","_id"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { toast } from 'react-toastify'\nimport { clearErrors, getPostsOfFollowing } from '../../actions/postAction'\nimport { LIKE_UNLIKE_POST_RESET, NEW_COMMENT_RESET, POST_FOLLOWING_RESET, SAVE_UNSAVE_POST_RESET } from '../../constants/postConstants'\nimport UsersDialog from '../Layouts/UsersDialog'\nimport PostItem from './PostItem'\nimport StoriesContainer from './StoriesContainer'\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport SpinLoader from '../Layouts/SpinLoader'\nimport SkeletonPost from '../Layouts/SkeletonPost'\n\nconst PostsContainer = () => {\n\n    const dispatch = useDispatch();\n\n    const [usersList, setUsersList] = useState([]);\n    const [usersDialog, setUsersDialog] = useState(false);\n    const [page, setPage] = useState(2);\n\n    const { loading, error, posts, totalPosts } = useSelector((state) => state.postOfFollowing)\n    const { error: likeError, message, success } = useSelector((state) => state.likePost)\n    const { error: commentError, success: commentSuccess } = useSelector((state) => state.newComment)\n    const { error: saveError, success: saveSuccess, message: saveMessage } = useSelector((state) => state.savePost)\n\n    const handleClose = () => setUsersDialog(false);\n\n    useEffect(() => {\n        if (error) {\n            toast.error(error);\n            dispatch(clearErrors());\n        }\n        dispatch(getPostsOfFollowing());\n        dispatch({ type: POST_FOLLOWING_RESET });\n    }, [dispatch, error]);\n\n    useEffect(() => {\n        if (likeError) {\n            toast.error(likeError);\n            dispatch(clearErrors());\n        }\n        if (success) {\n            toast.success(message)\n            dispatch({ type: LIKE_UNLIKE_POST_RESET });\n        }\n        if (commentError) {\n            toast.error(commentError);\n            dispatch(clearErrors());\n        }\n        if (commentSuccess) {\n            toast.success(\"Comment Added\")\n            dispatch({ type: NEW_COMMENT_RESET });\n        }\n        if (saveError) {\n            toast.error(saveError);\n            dispatch(clearErrors());\n        }\n        if (saveSuccess) {\n            toast.success(saveMessage)\n            dispatch({ type: SAVE_UNSAVE_POST_RESET });\n        }\n    }, [dispatch, success, likeError, message, commentError, commentSuccess, saveError, saveSuccess, saveMessage])\n\n    const fetchMorePosts = () => {\n        setPage((prev) => prev + 1)\n        dispatch(getPostsOfFollowing(page));\n    }\n\n    return (\n        <>\n            <div className=\"flex flex-col w-full lg:w-2/3 sm:mt-6 sm:px-8 mb-8\">\n\n                <StoriesContainer />\n\n                {loading &&\n                    Array(5).fill(\"\").map((el, i) => (<SkeletonPost key={i} />))\n                }\n                <InfiniteScroll\n                    dataLength={posts.length}\n                    next={fetchMorePosts}\n                    hasMore={posts.length !== totalPosts}\n                    loader={<SpinLoader />}\n                >\n                    <div className=\"w-full h-full mt-1 sm:mt-6 flex flex-col space-y-4\">\n                        {posts?.map((post) => (\n                            <PostItem key={post._id} {...post} setUsersDialog={setUsersDialog} setUsersList={setUsersList} />\n                        ))}\n                    </div>\n                </InfiniteScroll>\n\n                <UsersDialog title=\"Likes\" open={usersDialog} onClose={handleClose} usersList={usersList} />\n\n            </div>\n        </>\n    )\n}\n\nexport default PostsContainer"]},"metadata":{},"sourceType":"module"}