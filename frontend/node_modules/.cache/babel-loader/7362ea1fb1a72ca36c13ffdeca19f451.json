{"ast":null,"code":"import _asyncToGenerator from\"D:/New folder (4)/instagram-mern-main/backend/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"D:\\\\New folder (4)\\\\instagram-mern-main\\\\backend\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import axios from\"axios\";import{ALL_MESSAGES_FAIL,ALL_MESSAGES_REQUEST,ALL_MESSAGES_SUCCESS,CLEAR_ERRORS,NEW_MESSAGE_FAIL,NEW_MESSAGE_REQUEST,NEW_MESSAGE_SUCCESS}from\"../constants/messageConstants\";// Get All Messages\nexport var getAllMessages=function getAllMessages(chatId){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var _yield$axios$get,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;dispatch({type:ALL_MESSAGES_REQUEST});_context.next=4;return axios.get(\"/api/v1/messages/\".concat(chatId));case 4:_yield$axios$get=_context.sent;data=_yield$axios$get.data;dispatch({type:ALL_MESSAGES_SUCCESS,payload:data.messages});_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);dispatch({type:ALL_MESSAGES_FAIL,payload:_context.t0.response.data.message});case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return function(_x){return _ref.apply(this,arguments);};}();};// New Message\nexport var sendMessage=function sendMessage(msgData){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var config,_yield$axios$post,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;dispatch({type:NEW_MESSAGE_REQUEST});config={header:{\"Content-Type\":\"application/json\"}};_context2.next=5;return axios.post('/api/v1/newMessage/',msgData,config);case 5:_yield$axios$post=_context2.sent;data=_yield$axios$post.data;dispatch({type:NEW_MESSAGE_SUCCESS,payload:data});_context2.next=13;break;case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](0);dispatch({type:NEW_MESSAGE_FAIL,payload:_context2.t0.response.data.message});case 13:case\"end\":return _context2.stop();}}},_callee2,null,[[0,10]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};// Clear All Errors\nexport var clearErrors=function clearErrors(){return function(dispatch){dispatch({type:CLEAR_ERRORS});};};","map":{"version":3,"sources":["D:/New folder (4)/instagram-mern-main/backend/frontend/src/actions/messageAction.js"],"names":["axios","ALL_MESSAGES_FAIL","ALL_MESSAGES_REQUEST","ALL_MESSAGES_SUCCESS","CLEAR_ERRORS","NEW_MESSAGE_FAIL","NEW_MESSAGE_REQUEST","NEW_MESSAGE_SUCCESS","getAllMessages","chatId","dispatch","type","get","data","payload","messages","response","message","sendMessage","msgData","config","header","post","clearErrors"],"mappings":"oSAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,iBAAT,CAA4BC,oBAA5B,CAAkDC,oBAAlD,CAAwEC,YAAxE,CAAsFC,gBAAtF,CAAwGC,mBAAxG,CAA6HC,mBAA7H,KAAwJ,+BAAxJ,CAEA;AACA,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,MAAD,iGAAY,iBAAOC,QAAP,4JAGlCA,QAAQ,CAAC,CAAEC,IAAI,CAAET,oBAAR,CAAD,CAAR,CAHkC,sBAKXF,CAAAA,KAAK,CAACY,GAAN,4BAA8BH,MAA9B,EALW,uCAK1BI,IAL0B,kBAK1BA,IAL0B,CAOlCH,QAAQ,CAAC,CACLC,IAAI,CAAER,oBADD,CAELW,OAAO,CAAED,IAAI,CAACE,QAFT,CAAD,CAAR,CAPkC,+EAalCL,QAAQ,CAAC,CACLC,IAAI,CAAEV,iBADD,CAELa,OAAO,CAAE,YAAME,QAAN,CAAeH,IAAf,CAAoBI,OAFxB,CAAD,CAAR,CAbkC,oEAAZ,gEAAvB,CAoBP;AACA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,OAAD,kGAAa,kBAAOT,QAAP,yKAGhCA,QAAQ,CAAC,CAAEC,IAAI,CAAEL,mBAAR,CAAD,CAAR,CACMc,MAJ0B,CAIjB,CAAEC,MAAM,CAAE,CAAE,eAAgB,kBAAlB,CAAV,CAJiB,wBAKTrB,CAAAA,KAAK,CAACsB,IAAN,CAAW,qBAAX,CAAkCH,OAAlC,CAA2CC,MAA3C,CALS,yCAKxBP,IALwB,mBAKxBA,IALwB,CAOhCH,QAAQ,CAAC,CACLC,IAAI,CAAEJ,mBADD,CAELO,OAAO,CAAED,IAFJ,CAAD,CAAR,CAPgC,qFAahCH,QAAQ,CAAC,CACLC,IAAI,CAAEN,gBADD,CAELS,OAAO,CAAE,aAAME,QAAN,CAAeH,IAAf,CAAoBI,OAFxB,CAAD,CAAR,CAbgC,uEAAb,kEAApB,CAoBP;AACA,MAAO,IAAMM,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SAAM,UAACb,QAAD,CAAc,CAC3CA,QAAQ,CAAC,CAAEC,IAAI,CAAEP,YAAR,CAAD,CAAR,CACH,CAF0B,EAApB","sourcesContent":["import axios from \"axios\";\nimport { ALL_MESSAGES_FAIL, ALL_MESSAGES_REQUEST, ALL_MESSAGES_SUCCESS, CLEAR_ERRORS, NEW_MESSAGE_FAIL, NEW_MESSAGE_REQUEST, NEW_MESSAGE_SUCCESS } from \"../constants/messageConstants\";\n\n// Get All Messages\nexport const getAllMessages = (chatId) => async (dispatch) => {\n    try {\n\n        dispatch({ type: ALL_MESSAGES_REQUEST });\n\n        const { data } = await axios.get(`/api/v1/messages/${chatId}`);\n\n        dispatch({\n            type: ALL_MESSAGES_SUCCESS,\n            payload: data.messages,\n        });\n\n    } catch (error) {\n        dispatch({\n            type: ALL_MESSAGES_FAIL,\n            payload: error.response.data.message,\n        });\n    }\n};\n\n// New Message\nexport const sendMessage = (msgData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_MESSAGE_REQUEST });\n        const config = { header: { \"Content-Type\": \"application/json\" } }\n        const { data } = await axios.post('/api/v1/newMessage/', msgData, config);\n\n        dispatch({\n            type: NEW_MESSAGE_SUCCESS,\n            payload: data,\n        });\n\n    } catch (error) {\n        dispatch({\n            type: NEW_MESSAGE_FAIL,\n            payload: error.response.data.message,\n        });\n    }\n}\n\n// Clear All Errors\nexport const clearErrors = () => (dispatch) => {\n    dispatch({ type: CLEAR_ERRORS });\n}"]},"metadata":{},"sourceType":"module"}