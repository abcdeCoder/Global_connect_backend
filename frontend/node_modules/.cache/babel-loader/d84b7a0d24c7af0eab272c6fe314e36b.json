{"ast":null,"code":"import { CLEAR_ERRORS, DELETE_POST_FAIL, DELETE_POST_REQUEST, DELETE_POST_RESET, DELETE_POST_SUCCESS, LIKE_UNLIKE_POST_FAIL, LIKE_UNLIKE_POST_REQUEST, LIKE_UNLIKE_POST_RESET, LIKE_UNLIKE_POST_SUCCESS, NEW_COMMENT_FAIL, NEW_COMMENT_REQUEST, NEW_COMMENT_RESET, NEW_COMMENT_SUCCESS, NEW_POST_FAIL, NEW_POST_REQUEST, NEW_POST_RESET, NEW_POST_SUCCESS, POST_DETAILS_FAIL, POST_DETAILS_REQUEST, POST_DETAILS_RESET, POST_DETAILS_SUCCESS, POST_FOLLOWING_FAIL, POST_FOLLOWING_REQUEST, POST_FOLLOWING_RESET, POST_FOLLOWING_SUCCESS, SAVE_UNSAVE_POST_FAIL, SAVE_UNSAVE_POST_REQUEST, SAVE_UNSAVE_POST_RESET, SAVE_UNSAVE_POST_SUCCESS } from \"../constants/postConstants\"; // New Post Reducer\n\nexport const newPostReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    post: {}\n  };\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case NEW_POST_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case NEW_POST_SUCCESS:\n      return {\n        loading: false,\n        success: payload.success,\n        post: payload.post\n      };\n\n    case NEW_POST_FAIL:\n      return { ...state,\n        loading: false,\n        error: payload\n      };\n\n    case NEW_POST_RESET:\n      return { ...state,\n        success: false\n      };\n\n    case CLEAR_ERRORS:\n      return { ...state,\n        error: null\n      };\n\n    default:\n      return state;\n  }\n};\nexport const postOfFollowingReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    posts: []\n  };\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case POST_FOLLOWING_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case POST_FOLLOWING_SUCCESS:\n      return {\n        loading: false,\n        posts: [...state.posts, ...payload.posts],\n        totalPosts: payload.totalPosts\n      };\n\n    case POST_FOLLOWING_RESET:\n      return { ...state,\n        posts: [],\n        totalPosts: 0\n      };\n\n    case POST_FOLLOWING_FAIL:\n      return { ...state,\n        loading: false,\n        error: payload\n      };\n\n    case CLEAR_ERRORS:\n      return { ...state,\n        error: null\n      };\n\n    default:\n      return state;\n  }\n};\nexport const likePostReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case LIKE_UNLIKE_POST_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case LIKE_UNLIKE_POST_SUCCESS:\n      return {\n        loading: false,\n        success: payload.success,\n        message: payload.message\n      };\n\n    case LIKE_UNLIKE_POST_FAIL:\n      return { ...state,\n        loading: false,\n        error: payload\n      };\n\n    case LIKE_UNLIKE_POST_RESET:\n      return { ...state,\n        success: false,\n        message: null\n      };\n\n    case CLEAR_ERRORS:\n      return { ...state,\n        error: null\n      };\n\n    default:\n      return state;\n  }\n};\nexport const newCommentReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case NEW_COMMENT_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case NEW_COMMENT_SUCCESS:\n      return {\n        loading: false,\n        success: payload\n      };\n\n    case NEW_COMMENT_RESET:\n      return { ...state,\n        success: false\n      };\n\n    case NEW_COMMENT_FAIL:\n      return { ...state,\n        loading: false,\n        error: payload\n      };\n\n    case CLEAR_ERRORS:\n      return { ...state,\n        error: null\n      };\n\n    default:\n      return state;\n  }\n};\nexport const savePostReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case SAVE_UNSAVE_POST_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case SAVE_UNSAVE_POST_SUCCESS:\n      return {\n        loading: false,\n        success: payload.success,\n        message: payload.message\n      };\n\n    case SAVE_UNSAVE_POST_FAIL:\n      return { ...state,\n        loading: false,\n        error: payload\n      };\n\n    case SAVE_UNSAVE_POST_RESET:\n      return { ...state,\n        success: false,\n        message: null\n      };\n\n    case CLEAR_ERRORS:\n      return { ...state,\n        error: null\n      };\n\n    default:\n      return state;\n  }\n};\nexport const deletePostReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case DELETE_POST_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case DELETE_POST_SUCCESS:\n      return {\n        loading: false,\n        success: payload\n      };\n\n    case DELETE_POST_FAIL:\n      return { ...state,\n        loading: false,\n        error: payload\n      };\n\n    case DELETE_POST_RESET:\n      return { ...state,\n        success: false\n      };\n\n    case CLEAR_ERRORS:\n      return { ...state,\n        error: null\n      };\n\n    default:\n      return state;\n  }\n};\nexport const postDetailsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case POST_DETAILS_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case POST_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        post: payload.post\n      };\n\n    case POST_DETAILS_FAIL:\n      return { ...state,\n        loading: false,\n        error: payload\n      };\n\n    case POST_DETAILS_RESET:\n      return {\n        loading: false,\n        post: {}\n      };\n\n    case CLEAR_ERRORS:\n      return { ...state,\n        error: null\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["D:/New folder (4)/instagram-mern-main/frontend/src/reducers/postReducer.js"],"names":["CLEAR_ERRORS","DELETE_POST_FAIL","DELETE_POST_REQUEST","DELETE_POST_RESET","DELETE_POST_SUCCESS","LIKE_UNLIKE_POST_FAIL","LIKE_UNLIKE_POST_REQUEST","LIKE_UNLIKE_POST_RESET","LIKE_UNLIKE_POST_SUCCESS","NEW_COMMENT_FAIL","NEW_COMMENT_REQUEST","NEW_COMMENT_RESET","NEW_COMMENT_SUCCESS","NEW_POST_FAIL","NEW_POST_REQUEST","NEW_POST_RESET","NEW_POST_SUCCESS","POST_DETAILS_FAIL","POST_DETAILS_REQUEST","POST_DETAILS_RESET","POST_DETAILS_SUCCESS","POST_FOLLOWING_FAIL","POST_FOLLOWING_REQUEST","POST_FOLLOWING_RESET","POST_FOLLOWING_SUCCESS","SAVE_UNSAVE_POST_FAIL","SAVE_UNSAVE_POST_REQUEST","SAVE_UNSAVE_POST_RESET","SAVE_UNSAVE_POST_SUCCESS","newPostReducer","state","post","type","payload","loading","success","error","postOfFollowingReducer","posts","totalPosts","likePostReducer","message","newCommentReducer","savePostReducer","deletePostReducer","postDetailsReducer"],"mappings":"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","sourcesContent":["import { CLEAR_ERRORS, DELETE_POST_FAIL, DELETE_POST_REQUEST, DELETE_POST_RESET, DELETE_POST_SUCCESS, LIKE_UNLIKE_POST_FAIL, LIKE_UNLIKE_POST_REQUEST, LIKE_UNLIKE_POST_RESET, LIKE_UNLIKE_POST_SUCCESS, NEW_COMMENT_FAIL, NEW_COMMENT_REQUEST, NEW_COMMENT_RESET, NEW_COMMENT_SUCCESS, NEW_POST_FAIL, NEW_POST_REQUEST, NEW_POST_RESET, NEW_POST_SUCCESS, POST_DETAILS_FAIL, POST_DETAILS_REQUEST, POST_DETAILS_RESET, POST_DETAILS_SUCCESS, POST_FOLLOWING_FAIL, POST_FOLLOWING_REQUEST, POST_FOLLOWING_RESET, POST_FOLLOWING_SUCCESS, SAVE_UNSAVE_POST_FAIL, SAVE_UNSAVE_POST_REQUEST, SAVE_UNSAVE_POST_RESET, SAVE_UNSAVE_POST_SUCCESS } from \"../constants/postConstants\";\n\n\n// New Post Reducer\nexport const newPostReducer = (state = { post: {} }, { type, payload }) => {\n    switch (type) {\n        case NEW_POST_REQUEST:\n            return {\n                ...state,\n                loading: true,\n            };\n        case NEW_POST_SUCCESS:\n            return {\n                loading: false,\n                success: payload.success,\n                post: payload.post,\n            };\n        case NEW_POST_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: payload,\n            };\n        case NEW_POST_RESET:\n            return {\n                ...state,\n                success: false,\n            };\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null,\n            };\n        default:\n            return state;\n    }\n}\n\n\nexport const postOfFollowingReducer = (state = { posts: [] }, { type, payload }) => {\n    switch (type) {\n        case POST_FOLLOWING_REQUEST:\n            return {\n                ...state,\n                loading: true,\n            };\n        case POST_FOLLOWING_SUCCESS:\n            return {\n                loading: false,\n                posts: [...state.posts, ...payload.posts],\n                totalPosts: payload.totalPosts,\n            };\n        case POST_FOLLOWING_RESET:\n            return {\n                ...state,\n                posts: [],\n                totalPosts: 0,\n            };\n        case POST_FOLLOWING_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: payload,\n            };\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null,\n            };\n        default:\n            return state;\n    }\n}\n\nexport const likePostReducer = (state = {}, { type, payload }) => {\n    switch (type) {\n        case LIKE_UNLIKE_POST_REQUEST:\n            return {\n                ...state,\n                loading: true,\n            };\n        case LIKE_UNLIKE_POST_SUCCESS:\n            return {\n                loading: false,\n                success: payload.success,\n                message: payload.message,\n            };\n        case LIKE_UNLIKE_POST_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: payload,\n            };\n        case LIKE_UNLIKE_POST_RESET:\n            return {\n                ...state,\n                success: false,\n                message: null,\n            };\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null,\n            };\n        default:\n            return state;\n    }\n}\n\nexport const newCommentReducer = (state = {}, { type, payload }) => {\n    switch (type) {\n        case NEW_COMMENT_REQUEST:\n            return {\n                ...state,\n                loading: true,\n            };\n        case NEW_COMMENT_SUCCESS:\n            return {\n                loading: false,\n                success: payload,\n            };\n        case NEW_COMMENT_RESET:\n            return {\n                ...state,\n                success: false,\n            };\n        case NEW_COMMENT_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: payload,\n            };\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null,\n            };\n        default:\n            return state;\n    }\n}\n\nexport const savePostReducer = (state = {}, { type, payload }) => {\n    switch (type) {\n        case SAVE_UNSAVE_POST_REQUEST:\n            return {\n                ...state,\n                loading: true,\n            };\n        case SAVE_UNSAVE_POST_SUCCESS:\n            return {\n                loading: false,\n                success: payload.success,\n                message: payload.message,\n            };\n        case SAVE_UNSAVE_POST_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: payload,\n            };\n        case SAVE_UNSAVE_POST_RESET:\n            return {\n                ...state,\n                success: false,\n                message: null,\n            };\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null,\n            };\n        default:\n            return state;\n    }\n}\n\nexport const deletePostReducer = (state = {}, { type, payload }) => {\n    switch (type) {\n        case DELETE_POST_REQUEST:\n            return {\n                ...state,\n                loading: true,\n            };\n        case DELETE_POST_SUCCESS:\n            return {\n                loading: false,\n                success: payload,\n            };\n        case DELETE_POST_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: payload,\n            };\n        case DELETE_POST_RESET:\n            return {\n                ...state,\n                success: false,\n            };\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null,\n            };\n        default:\n            return state;\n    }\n}\n\nexport const postDetailsReducer = (state = {}, { type, payload }) => {\n    switch (type) {\n        case POST_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true,\n            };\n        case POST_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                post: payload.post,\n            };\n        case POST_DETAILS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: payload,\n            };\n        case POST_DETAILS_RESET:\n            return {\n                loading: false,\n                post: {}\n            };\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null,\n            };\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}