{"ast":null,"code":"var _jsxFileName = \"D:\\\\New folder (4)\\\\instagram-mern-main\\\\frontend\\\\src\\\\components\\\\User\\\\ResetPassword.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport Auth from './Auth';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { clearErrors, resetPassword } from '../../actions/userAction';\nimport { useDispatch, useSelector } from 'react-redux';\nimport BackdropLoader from '../Layouts/BackdropLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ResetPassword = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const params = useParams();\n  const {\n    error,\n    success,\n    loading\n  } = useSelector(state => state.forgotPassword);\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (newPassword.length < 8) {\n      toast.warn(\"Password length must be atleast 8 characters\");\n      return;\n    }\n\n    if (newPassword !== confirmPassword) {\n      toast.error(\"Password Doesn't Match\");\n      return;\n    }\n\n    dispatch(resetPassword(params.token, newPassword));\n  };\n\n  useEffect(() => {\n    if (error) {\n      toast.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (success) {\n      toast.success(\"Password Updated Successfully\");\n      navigate(\"/login\");\n    }\n  }, [dispatch, error, success, navigate]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading && /*#__PURE__*/_jsxDEV(BackdropLoader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(Auth, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white border flex flex-col gap-2 p-4 pt-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          draggable: \"false\",\n          className: \"mx-auto h-30 w-36 object-contain\",\n          src: \"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"flex flex-col justify-center items-center gap-3 m-3 md:m-8\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            size: \"small\",\n            label: \"New Password\",\n            type: \"password\",\n            name: \"newPassword\",\n            value: newPassword,\n            onChange: e => setNewPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            size: \"small\",\n            label: \"Confirm New Password\",\n            type: \"password\",\n            name: \"confirmPassword\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"bg-primary-blue font-medium py-2 rounded text-white w-full\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"my-3 text-gray-700\",\n            children: \"OR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/password/forgot\",\n            className: \"text-sm font-medium text-blue-800\",\n            children: \"Forgot password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white border p-5 text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            className: \"text-primary-blue\",\n            children: \"Log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 52\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ResetPassword, \"TSDPTISwqJvwSYgp6c5v64KB75E=\", false, function () {\n  return [useDispatch, useNavigate, useParams, useSelector];\n});\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["D:/New folder (4)/instagram-mern-main/frontend/src/components/User/ResetPassword.jsx"],"names":["React","useEffect","useState","TextField","Auth","Link","useNavigate","useParams","toast","clearErrors","resetPassword","useDispatch","useSelector","BackdropLoader","ResetPassword","dispatch","navigate","params","error","success","loading","state","forgotPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","handleSubmit","e","preventDefault","length","warn","token","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport TextField from '@mui/material/TextField';\nimport Auth from './Auth';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { clearErrors, resetPassword } from '../../actions/userAction';\nimport { useDispatch, useSelector } from 'react-redux';\nimport BackdropLoader from '../Layouts/BackdropLoader';\n\nconst ResetPassword = () => {\n\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const params = useParams();\n\n    const { error, success, loading } = useSelector((state) => state.forgotPassword);\n\n    const [newPassword, setNewPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (newPassword.length < 8) {\n            toast.warn(\"Password length must be atleast 8 characters\");\n            return;\n        }\n        if (newPassword !== confirmPassword) {\n            toast.error(\"Password Doesn't Match\");\n            return;\n        }\n        dispatch(resetPassword(params.token, newPassword));\n    }\n\n    useEffect(() => {\n        if (error) {\n            toast.error(error);\n            dispatch(clearErrors());\n        }\n        if (success) {\n            toast.success(\"Password Updated Successfully\");\n            navigate(\"/login\")\n        }\n    }, [dispatch, error, success, navigate]);\n\n    return (\n        <>\n            {loading && <BackdropLoader />}\n            <Auth>\n                <div className=\"bg-white border flex flex-col gap-2 p-4 pt-10\">\n                    <img draggable=\"false\" className=\"mx-auto h-30 w-36 object-contain\" src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\" alt=\"\" />\n                    <form onSubmit={handleSubmit} className=\"flex flex-col justify-center items-center gap-3 m-3 md:m-8\">\n                        <TextField\n                            fullWidth\n                            size=\"small\"\n                            label=\"New Password\"\n                            type=\"password\"\n                            name=\"newPassword\"\n                            value={newPassword}\n                            onChange={(e) => setNewPassword(e.target.value)}\n                            required\n                        />\n                        <TextField\n                            fullWidth\n                            size=\"small\"\n                            label=\"Confirm New Password\"\n                            type=\"password\"\n                            name=\"confirmPassword\"\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                            required\n                        />\n                        <button type=\"submit\" className=\"bg-primary-blue font-medium py-2 rounded text-white w-full\">Submit</button>\n                        <span className=\"my-3 text-gray-700\">OR</span>\n                        <Link to=\"/password/forgot\" className=\"text-sm font-medium text-blue-800\">Forgot password?</Link>\n                    </form>\n                </div>\n\n                <div className=\"bg-white border p-5 text-center\">\n                    <span>Already have an account? <Link to=\"/login\" className=\"text-primary-blue\">Log in</Link></span>\n                </div>\n            </Auth>\n        </>\n    )\n}\n\nexport default ResetPassword"]},"metadata":{},"sourceType":"module"}