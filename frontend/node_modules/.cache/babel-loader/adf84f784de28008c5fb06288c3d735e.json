{"ast":null,"code":"var _jsxFileName = \"D:\\\\New folder (4)\\\\instagram-mern-main\\\\frontend\\\\src\\\\components\\\\Chats\\\\ChatListItem.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useParams } from 'react-router-dom';\nimport { SOCKET_ENDPOINT } from '../../utils/constants';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatListItem = _ref => {\n  _s();\n\n  let {\n    _id,\n    users,\n    latestMessage\n  } = _ref;\n  const dispatch = useDispatch();\n  const params = useParams();\n  const [friend, setFriend] = useState({});\n  const socket = useRef(null);\n  const [isOnline, setIsOnline] = useState(false);\n  const {\n    user\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    const friendDetails = users.find(u => u._id !== user._id);\n    setFriend(friendDetails);\n  }, [users]);\n  useEffect(() => {\n    socket.current = io(SOCKET_ENDPOINT);\n  }, []);\n  useEffect(() => {\n    socket.current.on(\"getUsers\", users => {\n      // console.log(users);\n      setIsOnline(users.some(u => u.userId === friend._id));\n    });\n  }, [friend._id]);\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: `/direct/t/${_id}/${friend._id}`,\n    className: `${params.chatId === _id && 'bg-gray-100'} flex gap-3 items-center py-2 px-4 cursor-pointer hover:bg-gray-100`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-14 h-14 relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        draggable: \"false\",\n        className: \"w-full h-full rounded-full object-cover\",\n        src: friend.avatar,\n        alt: \"avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), isOnline && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute right-0 bottom-0.5 h-3 w-3 bg-green-500 rounded-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-start\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-sm\",\n        children: friend.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-sm truncate w-36 text-gray-400\",\n        children: latestMessage === null || latestMessage === void 0 ? void 0 : latestMessage.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChatListItem, \"kXS3nTXbiQVebsvj3KruauIRAAY=\", false, function () {\n  return [useDispatch, useParams, useSelector];\n});\n\n_c = ChatListItem;\nexport default ChatListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatListItem\");","map":{"version":3,"sources":["D:/New folder (4)/instagram-mern-main/frontend/src/components/Chats/ChatListItem.jsx"],"names":["useEffect","useRef","useState","useDispatch","useSelector","Link","useParams","SOCKET_ENDPOINT","io","ChatListItem","_id","users","latestMessage","dispatch","params","friend","setFriend","socket","isOnline","setIsOnline","user","state","friendDetails","find","u","current","on","some","userId","chatId","avatar","name","content"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,SAASC,eAAT,QAAgC,uBAAhC;AACA,SAASC,EAAT,QAAmB,kBAAnB;;;AAEA,MAAMC,YAAY,GAAG,QAAmC;AAAA;;AAAA,MAAlC;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,KAAP;AAAcC,IAAAA;AAAd,GAAkC;AAEpD,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAMe,MAAM,GAAGhB,MAAM,CAAC,IAAD,CAArB;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAM;AAAEkB,IAAAA;AAAF,MAAWhB,WAAW,CAAEiB,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAA5B;AAEApB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMsB,aAAa,GAAGX,KAAK,CAACY,IAAN,CAAYC,CAAD,IAAOA,CAAC,CAACd,GAAF,KAAUU,IAAI,CAACV,GAAjC,CAAtB;AACAM,IAAAA,SAAS,CAACM,aAAD,CAAT;AACH,GAHQ,EAGN,CAACX,KAAD,CAHM,CAAT;AAKAX,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,MAAM,CAACQ,OAAP,GAAiBjB,EAAE,CAACD,eAAD,CAAnB;AACH,GAFQ,EAEN,EAFM,CAAT;AAIAP,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,MAAM,CAACQ,OAAP,CAAeC,EAAf,CAAkB,UAAlB,EAA8Bf,KAAK,IAAI;AACnC;AACAQ,MAAAA,WAAW,CAACR,KAAK,CAACgB,IAAN,CAAYH,CAAD,IAAOA,CAAC,CAACI,MAAF,KAAab,MAAM,CAACL,GAAtC,CAAD,CAAX;AACH,KAHD;AAIH,GALQ,EAKN,CAACK,MAAM,CAACL,GAAR,CALM,CAAT;AAOA,sBACI,QAAC,IAAD;AAAM,IAAA,EAAE,EAAG,aAAYA,GAAI,IAAGK,MAAM,CAACL,GAAI,EAAzC;AAA4C,IAAA,SAAS,EAAG,GAAEI,MAAM,CAACe,MAAP,KAAkBnB,GAAlB,IAAyB,aAAc,qEAAjG;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAuB,QAAA,SAAS,EAAC,yCAAjC;AAA2E,QAAA,GAAG,EAAEK,MAAM,CAACe,MAAvF;AAA+F,QAAA,GAAG,EAAC;AAAnG;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKZ,QAAQ,iBAAI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA,8BACI;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA,kBAA2BH,MAAM,CAACgB;AAAlC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,SAAS,EAAC,qCAAhB;AAAA,kBAAuDnB,aAAvD,aAAuDA,aAAvD,uBAAuDA,aAAa,CAAEoB;AAAtE;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAvCD;;GAAMvB,Y;UAEeN,W,EACFG,S,EAMEF,W;;;KATfK,Y;AAyCN,eAAeA,YAAf","sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useParams } from 'react-router-dom'\nimport { SOCKET_ENDPOINT } from '../../utils/constants';\nimport { io } from 'socket.io-client';\n\nconst ChatListItem = ({ _id, users, latestMessage }) => {\n\n    const dispatch = useDispatch();\n    const params = useParams();\n    const [friend, setFriend] = useState({});\n\n    const socket = useRef(null);\n    const [isOnline, setIsOnline] = useState(false);\n\n    const { user } = useSelector((state) => state.user);\n\n    useEffect(() => {\n        const friendDetails = users.find((u) => u._id !== user._id);\n        setFriend(friendDetails)\n    }, [users]);\n\n    useEffect(() => {\n        socket.current = io(SOCKET_ENDPOINT);\n    }, []);\n\n    useEffect(() => {\n        socket.current.on(\"getUsers\", users => {\n            // console.log(users);\n            setIsOnline(users.some((u) => u.userId === friend._id));\n        })\n    }, [friend._id])\n\n    return (\n        <Link to={`/direct/t/${_id}/${friend._id}`} className={`${params.chatId === _id && 'bg-gray-100'} flex gap-3 items-center py-2 px-4 cursor-pointer hover:bg-gray-100`}>\n            <div className=\"w-14 h-14 relative\">\n                <img draggable=\"false\" className=\"w-full h-full rounded-full object-cover\" src={friend.avatar} alt=\"avatar\" />\n                {isOnline && <div className=\"absolute right-0 bottom-0.5 h-3 w-3 bg-green-500 rounded-full\"></div>}\n            </div>\n            <div className=\"flex flex-col items-start\">\n                <span className=\"text-sm\">{friend.name}</span>\n                <span className=\"text-sm truncate w-36 text-gray-400\">{latestMessage?.content}</span>\n            </div>\n        </Link>\n    )\n}\n\nexport default ChatListItem"]},"metadata":{},"sourceType":"module"}