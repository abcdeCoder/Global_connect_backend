{"ast":null,"code":"import axios from \"axios\";\nimport { ALL_MESSAGES_FAIL, ALL_MESSAGES_REQUEST, ALL_MESSAGES_SUCCESS, CLEAR_ERRORS, NEW_MESSAGE_FAIL, NEW_MESSAGE_REQUEST, NEW_MESSAGE_SUCCESS } from \"../constants/messageConstants\"; // Get All Messages\n\nexport const getAllMessages = chatId => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_MESSAGES_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/messages/${chatId}`);\n    dispatch({\n      type: ALL_MESSAGES_SUCCESS,\n      payload: data.messages\n    });\n  } catch (error) {\n    dispatch({\n      type: ALL_MESSAGES_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // New Message\n\nexport const sendMessage = msgData => async dispatch => {\n  try {\n    dispatch({\n      type: NEW_MESSAGE_REQUEST\n    });\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/v1/newMessage/', msgData, config);\n    dispatch({\n      type: NEW_MESSAGE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_MESSAGE_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Clear All Errors\n\nexport const clearErrors = () => dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"sources":["D:/New folder (4)/instagram-mern-main/frontend/src/actions/messageAction.js"],"names":["axios","ALL_MESSAGES_FAIL","ALL_MESSAGES_REQUEST","ALL_MESSAGES_SUCCESS","CLEAR_ERRORS","NEW_MESSAGE_FAIL","NEW_MESSAGE_REQUEST","NEW_MESSAGE_SUCCESS","getAllMessages","chatId","dispatch","type","data","get","payload","messages","error","response","message","sendMessage","msgData","config","header","post","clearErrors"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,EAA4BC,oBAA5B,EAAkDC,oBAAlD,EAAwEC,YAAxE,EAAsFC,gBAAtF,EAAwGC,mBAAxG,EAA6HC,mBAA7H,QAAwJ,+BAAxJ,C,CAEA;;AACA,OAAO,MAAMC,cAAc,GAAIC,MAAD,IAAY,MAAOC,QAAP,IAAoB;AAC1D,MAAI;AAEAA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET;AAAR,KAAD,CAAR;AAEA,UAAM;AAAEU,MAAAA;AAAF,QAAW,MAAMZ,KAAK,CAACa,GAAN,CAAW,oBAAmBJ,MAAO,EAArC,CAAvB;AAEAC,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAER,oBADD;AAELW,MAAAA,OAAO,EAAEF,IAAI,CAACG;AAFT,KAAD,CAAR;AAKH,GAXD,CAWE,OAAOC,KAAP,EAAc;AACZN,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEV,iBADD;AAELa,MAAAA,OAAO,EAAEE,KAAK,CAACC,QAAN,CAAeL,IAAf,CAAoBM;AAFxB,KAAD,CAAR;AAIH;AACJ,CAlBM,C,CAoBP;;AACA,OAAO,MAAMC,WAAW,GAAIC,OAAD,IAAa,MAAOV,QAAP,IAAoB;AACxD,MAAI;AAEAA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL;AAAR,KAAD,CAAR;AACA,UAAMe,MAAM,GAAG;AAAEC,MAAAA,MAAM,EAAE;AAAE,wBAAgB;AAAlB;AAAV,KAAf;AACA,UAAM;AAAEV,MAAAA;AAAF,QAAW,MAAMZ,KAAK,CAACuB,IAAN,CAAW,qBAAX,EAAkCH,OAAlC,EAA2CC,MAA3C,CAAvB;AAEAX,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEJ,mBADD;AAELO,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAKH,GAXD,CAWE,OAAOI,KAAP,EAAc;AACZN,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEN,gBADD;AAELS,MAAAA,OAAO,EAAEE,KAAK,CAACC,QAAN,CAAeL,IAAf,CAAoBM;AAFxB,KAAD,CAAR;AAIH;AACJ,CAlBM,C,CAoBP;;AACA,OAAO,MAAMM,WAAW,GAAG,MAAOd,QAAD,IAAc;AAC3CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEP;AAAR,GAAD,CAAR;AACH,CAFM","sourcesContent":["import axios from \"axios\";\nimport { ALL_MESSAGES_FAIL, ALL_MESSAGES_REQUEST, ALL_MESSAGES_SUCCESS, CLEAR_ERRORS, NEW_MESSAGE_FAIL, NEW_MESSAGE_REQUEST, NEW_MESSAGE_SUCCESS } from \"../constants/messageConstants\";\n\n// Get All Messages\nexport const getAllMessages = (chatId) => async (dispatch) => {\n    try {\n\n        dispatch({ type: ALL_MESSAGES_REQUEST });\n\n        const { data } = await axios.get(`/api/v1/messages/${chatId}`);\n\n        dispatch({\n            type: ALL_MESSAGES_SUCCESS,\n            payload: data.messages,\n        });\n\n    } catch (error) {\n        dispatch({\n            type: ALL_MESSAGES_FAIL,\n            payload: error.response.data.message,\n        });\n    }\n};\n\n// New Message\nexport const sendMessage = (msgData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_MESSAGE_REQUEST });\n        const config = { header: { \"Content-Type\": \"application/json\" } }\n        const { data } = await axios.post('/api/v1/newMessage/', msgData, config);\n\n        dispatch({\n            type: NEW_MESSAGE_SUCCESS,\n            payload: data,\n        });\n\n    } catch (error) {\n        dispatch({\n            type: NEW_MESSAGE_FAIL,\n            payload: error.response.data.message,\n        });\n    }\n}\n\n// Clear All Errors\nexport const clearErrors = () => (dispatch) => {\n    dispatch({ type: CLEAR_ERRORS });\n}"]},"metadata":{},"sourceType":"module"}